name: Release

on:
  push:
    branches: [main]
    paths:
      - "Cargo.toml"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  check-version:
    name: Check Version Change
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      new-version: ${{ steps.check.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if version changed
        id: check
        run: |
          # Get current version from Cargo.toml
          current_version=$(grep '^version = ' Cargo.toml | head -1 | sed 's/version = "\(.*\)"/\1/')
          echo "Current version: $current_version"

          # Check if this version already has a tag
          if git tag --list | grep -q "^v$current_version$"; then
            echo "Version $current_version already has a tag"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "New version detected: $current_version"
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$current_version" >> $GITHUB_OUTPUT
          fi

  build-release:
    name: Build Release Assets
    runs-on: ${{ matrix.os }}
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact-name: audio-interrogator-v${{ needs.check-version.outputs.new-version }}-linux-x64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact-name: audio-interrogator-v${{ needs.check-version.outputs.new-version }}-linux-arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev pkg-config
          if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
          fi

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-release-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release binary
        run: |
          if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
            export CC=aarch64-linux-gnu-gcc
            export PKG_CONFIG_ALLOW_CROSS=1
            export PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig
          fi
          cargo build --release --target ${{ matrix.target }}

      - name: Strip binary
        run: |
          if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
            aarch64-linux-gnu-strip target/${{ matrix.target }}/release/audio-interrogator
          else
            strip target/${{ matrix.target }}/release/audio-interrogator
          fi

      - name: Create release archive
        run: |
          mkdir -p release
          cp target/${{ matrix.target }}/release/audio-interrogator release/
          cp README.md USAGE.md CHANGELOG.md LICENSE release/
          cd release
          tar -czf ../${{ matrix.artifact-name }}.tar.gz *

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-name }}.tar.gz
          retention-days: 7

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [check-version, build-release]
    if: needs.check-version.outputs.version-changed == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          prev_tag=$(git tag --sort=-version:refname | grep -E '^v[0-9]' | head -1 || echo "")

          if [ -z "$prev_tag" ]; then
            echo "No previous tags found, using initial commit"
            changelog=$(git log --oneline --pretty=format:"- %s" | head -20)
          else
            echo "Generating changelog since $prev_tag"
            changelog=$(git log $prev_tag..HEAD --oneline --pretty=format:"- %s")
          fi

          # Save changelog to file for multiline output
          echo "$changelog" > changelog.txt
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat changelog.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create-release
        run: |
          cat > release_notes.md << 'EOF'
          ## Audio Interrogator v${{ needs.check-version.outputs.new-version }}

          ### Changes
          ${{ steps.changelog.outputs.changelog }}

          ### Installation

          Download the appropriate binary for your system:
          - **Linux x64**: `audio-interrogator-v${{ needs.check-version.outputs.new-version }}-linux-x64.tar.gz`
          - **Linux ARM64**: `audio-interrogator-v${{ needs.check-version.outputs.new-version }}-linux-arm64.tar.gz`

          Extract and run:
          ```bash
          tar -xzf audio-interrogator-v${{ needs.check-version.outputs.new-version }}-linux-x64.tar.gz
          chmod +x audio-interrogator
          ./audio-interrogator --help
          ```

          ### Documentation
          - [Usage Guide](https://github.com/meganerd/audio-interrogator/blob/main/USAGE.md)
          - [Output Guide](https://github.com/meganerd/audio-interrogator/blob/main/OUTPUT_GUIDE.md)
          - [Contributing](https://github.com/meganerd/audio-interrogator/blob/main/CONTRIBUTING.md)

          ---

          **Full Changelog**: https://github.com/meganerd/audio-interrogator/compare/v${{ needs.check-version.outputs.new-version }}
          EOF

          gh release create v${{ needs.check-version.outputs.new-version }} \
            --title "Audio Interrogator v${{ needs.check-version.outputs.new-version }}" \
            --notes-file release_notes.md \
            ./artifacts/audio-interrogator-v${{ needs.check-version.outputs.new-version }}-linux-x64/audio-interrogator-v${{ needs.check-version.outputs.new-version }}-linux-x64.tar.gz \
            ./artifacts/audio-interrogator-v${{ needs.check-version.outputs.new-version }}-linux-arm64/audio-interrogator-v${{ needs.check-version.outputs.new-version }}-linux-arm64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update install script
        run: |
          # Update the version in install.sh if it exists
          if [ -f install.sh ]; then
            sed -i "s/VERSION=\".*\"/VERSION=\"${{ needs.check-version.outputs.new-version }}\"/" install.sh

            # Commit the updated install script
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add install.sh
            if git diff --staged --quiet; then
              echo "No changes to install.sh"
            else
              git commit -m "chore: update install script to v${{ needs.check-version.outputs.new-version }}"
              git push
            fi
          fi

  publish-crate:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: [check-version, create-release]
    if: needs.check-version.outputs.version-changed == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev pkg-config

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Login to crates.io
        run: cargo login ${{ secrets.CRATES_IO_TOKEN }}

      - name: Publish to crates.io
        run: cargo publish --dry-run && cargo publish

  notify-discord:
    name: Notify Discord
    runs-on: ubuntu-latest
    needs: [check-version, create-release]
    if: needs.check-version.outputs.version-changed == 'true' && secrets.DISCORD_WEBHOOK_URL != ''

    steps:
      - name: Send Discord notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: |
            ðŸŽ‰ **Audio Interrogator v${{ needs.check-version.outputs.new-version }} Released!**

            New version is now available on GitHub releases and crates.io

            ðŸ“¥ Download: https://github.com/meganerd/audio-interrogator/releases/tag/v${{ needs.check-version.outputs.new-version }}
            ðŸ“¦ Crates.io: https://crates.io/crates/audio-interrogator
